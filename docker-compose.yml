version: "3.7"
services:
  web:
    build:
      args:
        user: user
        uid: 1000
      context: ./context/php/
      dockerfile: Dockerfile
    image: web
    container_name: crud-web
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - ./logs:/var/www/storage/logs
    networks:
      - crud

  nginx:
    image: nginx:alpine
    container_name: crud-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - crud

  db:
    build:
      args:
        user: user
        uid: 1000
      context: ./context/mysql/
      dockerfile: Dockerfile
    image: mysql:5.7
    container_name: crud-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d 
    ports:
      - 3306:3306 
    networks:
      - crud
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
    networks:
      - crud
  redis:
    image: 'redis:latest'
    container_name: 'crud-redis'
    restart: 'always'
    environment:
        REDIS_HOST : cache
        REDIS_PORT : '${REDIS_PORT}'
        REDIS_PASSWORD : '${REDIS_PASSWORD}'
    command: 'redis-server --save 20 1 --loglevel warning --requirepass ''${REDIS_PASSWORD}'''
    volumes:
      - './:/var/www'
    networks:
      - crud

  queue:
    build:
      args:
          user: jaciel
          uid: 1000
      context: ./context/php/
      dockerfile: Dockerfile
    command: 'php artisan queue:work'
    container_name: crud-queue
    restart: unless-stopped
    volumes:
      - './:/var/www'
    depends_on:
      - redis
    networks:
      - crud

  schedule:
    build:
      args:
          user: jaciel
          uid: 1000
      context: ./context/php/
      dockerfile: Dockerfile
    command: 'php artisan schedule:work'
    container_name: crud-schedule
    restart: unless-stopped
    volumes:
      - './:/var/www'
    depends_on:
      - redis
      - queue
    networks:
      - crud

  echo:
    build:
      args:
          user: jaciel
          uid: 1000
      context: ./context/node/
    volumes:
      - ./:/var/www
      - './laravel-echo-server.json:/app/laravel-echo-server.json'
    ports:
      - '${LARAVEL_ECHO_SERVER_PORT}:6001'
    restart: unless-stopped  
    command: 'laravel-echo-server start --force'  
    depends_on:
      - redis
    networks:
      - crud            

networks:
  crud:
    driver: bridge